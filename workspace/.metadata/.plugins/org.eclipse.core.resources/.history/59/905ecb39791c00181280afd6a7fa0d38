tree grammar TExpr1;

options {
  tokenVocab=Expr;

  ASTLabelType=CommonTree;

}

@header {
// package com.sample;
}

prog    : (e=expr {System.out.println ($e.out);})* ;

expr returns [Integer out]
        : ^(PLUS  e1=expr e2=expr) {$out = $e1.out + $e2.out;}
        | ^(MINUS e1=expr e2=expr) {$out = $e1.out - $e2.out;}
        | ^(MUL   e1=expr e2=expr) {$out = $e1.out * $e2.out;}
        | ^(DIV   e1=expr e2=expr) {$out = $e1.out / $e2.out;}
        | ^(POW   e1=expr e2=expr) {$out = (int)Math.pow((int)$e1.out, (int)$e2.out);}
        | ^(PODST i1=ID   e2=expr)
        | INT                      {$out = Integer.parseInt($INT.text);}
        ;